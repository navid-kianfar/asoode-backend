using System;
using Asoode.Core.ViewModels.Membership.Plan;
using Asoode.Data.Models.Junctions;

namespace Asoode.Data.Models.Base;

public static class PlanExtensions
{
    public static PlanViewModel ToViewModel(this Plan plan)
    {
        return new PlanViewModel
        {
            Days = plan.Days,
            Description = plan.Description,
            Enabled = plan.Enabled,
            Id = plan.Id,
            Order = plan.Order,
            Picture = plan.Picture,
            Title = plan.Title,
            Type = plan.Type,
            Unit = plan.Unit,
            Users = plan.Users,
            AttachmentSize = plan.AttachmentSize,
            CanExtend = plan.CanExtend,
            ComplexGroup = plan.ComplexGroup,
            Project = plan.Project,
            CreatedAt = plan.CreatedAt,
            DiskSpace = plan.DiskSpace,
            OneTime = plan.OneTime,
            PlanCost = plan.PlanCost,
            SimpleGroup = plan.SimpleGroup,
            WorkPackage = plan.WorkPackage,
            UpdatedAt = plan.UpdatedAt,
            AdditionalWorkPackageCost = plan.AdditionalWorkPackageCost,
            AdditionalSimpleGroupCost = plan.AdditionalSimpleGroupCost,
            AdditionalComplexGroupCost = plan.AdditionalComplexGroupCost,
            AdditionalProjectCost = plan.AdditionalProjectCost,
            AdditionalSpaceCost = plan.AdditionalSpaceCost,
            AdditionalUserCost = plan.AdditionalUserCost,
            FeatureCustomField = plan.FeatureCustomField,
            FeatureTimeSpent = plan.FeatureTimeSpent,
            FeatureTimeValue = plan.FeatureTimeValue,
            FeatureTimeOff = plan.FeatureTimeOff,
            FeatureShift = plan.FeatureShift,
            FeatureReports = plan.FeatureReports,
            FeaturePayments = plan.FeaturePayments,
            FeatureChat = plan.FeatureChat,
            FeatureFiles = plan.FeatureFiles,
            FeatureWbs = plan.FeatureWbs,
            FeatureRoadMap = plan.FeatureRoadMap,
            FeatureTree = plan.FeatureTree,
            FeatureObjectives = plan.FeatureObjectives,
            FeatureSeasons = plan.FeatureSeasons,
            FeatureVote = plan.FeatureVote,
            FeatureSubTask = plan.FeatureSubTask,
            FeatureCalendar = plan.FeatureCalendar,
            FeatureKartabl = plan.FeatureKartabl,
            FeatureBlocking = plan.FeatureBlocking,
            FeatureRelated = plan.FeatureRelated,
            FeatureComplexGroup = plan.FeatureComplexGroup,
            FeatureGroupTimeSpent = plan.FeatureGroupTimeSpent
        };
    }

    public static UserPlanInfo ToNewUserPlanInfo(this Plan plan, Guid userId, Guid planId)
    {
        return new UserPlanInfo
        {
            Id = planId,
            Days = plan.Days,
            Enabled = plan.Enabled,
            Type = plan.Type,
            Unit = plan.Unit,
            Users = plan.Users,
            AttachmentSize = plan.AttachmentSize,
            CanExtend = plan.CanExtend,
            ComplexGroup = plan.ComplexGroup,
            Project = plan.Project,
            Space = plan.DiskSpace,
            OneTime = plan.OneTime,
            PlanCost = plan.PlanCost,
            PlanId = plan.Id,
            SimpleGroup = plan.SimpleGroup,
            WorkPackage = plan.WorkPackage,
            UserId = userId,
            AdditionalComplexGroupCost = plan.AdditionalComplexGroupCost,
            AdditionalProjectCost = plan.AdditionalProjectCost,
            AdditionalSpaceCost = plan.AdditionalSpaceCost,
            AdditionalUserCost = plan.AdditionalUserCost,
            Description = plan.Description,
            Picture = plan.Picture,
            Title = plan.Title,
            AdditionalWorkPackageCost = plan.AdditionalWorkPackageCost,
            FeatureCustomField = plan.FeatureCustomField,
            FeatureTimeSpent = plan.FeatureTimeSpent,
            FeatureChat = plan.FeatureChat,
            FeatureFiles = plan.FeatureFiles,
            FeatureVote = plan.FeatureVote,
            FeatureSubTask = plan.FeatureSubTask,
            FeatureKartabl = plan.FeatureKartabl,
            FeatureCalendar = plan.FeatureCalendar,
            FeatureBlocking = plan.FeatureBlocking,
            FeatureRelated = plan.FeatureRelated,
            FeatureTimeValue = plan.FeatureTimeValue,
            FeatureTimeOff = plan.FeatureTimeOff,
            FeatureShift = plan.FeatureShift,
            FeatureReports = plan.FeatureReports,
            FeaturePayments = plan.FeaturePayments,
            FeatureWbs = plan.FeatureWbs,
            FeatureRoadMap = plan.FeatureRoadMap,
            FeatureTree = plan.FeatureTree,
            FeatureObjectives = plan.FeatureObjectives,
            FeatureSeasons = plan.FeatureSeasons,
            FeatureComplexGroup = plan.FeatureComplexGroup,
            FeatureGroupTimeSpent = plan.FeatureGroupTimeSpent,
            AdditionalSimpleGroupCost = plan.AdditionalSimpleGroupCost,
            UsedUser = 1,
            UsedProject = 0,
            UsedSpace = 0,
            UsedComplexGroup = 0,
            UsedSimpleGroup = 0,
            UsedWorkPackage = 0
        };
    }

    public static UserPlanInfoViewModel ToViewModel(this UserPlanInfo plan)
    {
        return new UserPlanInfoViewModel
        {
            ExpireAt = plan.ExpireAt,
            Days = plan.Days,
            Enabled = plan.Enabled,
            Id = plan.Id,
            Type = plan.Type,
            Unit = plan.Unit,
            Users = plan.Users,
            AttachmentSize = plan.AttachmentSize,
            CanExtend = plan.CanExtend,
            ComplexGroup = plan.ComplexGroup,
            Project = plan.Project,
            CreatedAt = plan.CreatedAt,
            Space = plan.Space,
            OneTime = plan.OneTime,
            PlanCost = plan.PlanCost,
            SimpleGroup = plan.SimpleGroup,
            WorkPackage = plan.WorkPackage,
            UpdatedAt = plan.UpdatedAt,
            AdditionalWorkPackageCost = plan.AdditionalWorkPackageCost,
            AdditionalSimpleGroupCost = plan.AdditionalSimpleGroupCost,
            AdditionalComplexGroupCost = plan.AdditionalComplexGroupCost,
            AdditionalProjectCost = plan.AdditionalProjectCost,
            AdditionalSpaceCost = plan.AdditionalSpaceCost,
            AdditionalUserCost = plan.AdditionalUserCost,
            FeatureCustomField = plan.FeatureCustomField,
            FeatureTimeSpent = plan.FeatureTimeSpent,
            FeatureTimeValue = plan.FeatureTimeValue,
            FeatureTimeOff = plan.FeatureTimeOff,
            FeatureShift = plan.FeatureShift,
            FeatureReports = plan.FeatureReports,
            FeaturePayments = plan.FeaturePayments,
            FeatureChat = plan.FeatureChat,
            FeatureFiles = plan.FeatureFiles,
            FeatureWbs = plan.FeatureWbs,
            FeatureRoadMap = plan.FeatureRoadMap,
            FeatureTree = plan.FeatureTree,
            FeatureObjectives = plan.FeatureObjectives,
            FeatureSeasons = plan.FeatureSeasons,
            FeatureVote = plan.FeatureVote,
            FeatureSubTask = plan.FeatureSubTask,
            FeatureCalendar = plan.FeatureCalendar,
            FeatureKartabl = plan.FeatureKartabl,
            FeatureBlocking = plan.FeatureBlocking,
            FeatureRelated = plan.FeatureRelated,
            FeatureComplexGroup = plan.FeatureComplexGroup,
            FeatureGroupTimeSpent = plan.FeatureGroupTimeSpent,
            Description = plan.Description,
            Picture = plan.Picture,
            Title = plan.Title,
            PlanId = plan.PlanId,
            UserId = plan.UserId,
            UsedProject = plan.UsedProject,
            UsedSpace = plan.UsedSpace,
            UsedUser = plan.UsedUser,
            UsedComplexGroup = plan.UsedComplexGroup,
            UsedSimpleGroup = plan.UsedSimpleGroup,
            UsedWorkPackage = plan.UsedWorkPackage
        };
    }
}